{"ast":null,"code":"var _jsxFileName = \"/home/mikel/Moringa/Phase-2/BANK-FLAT/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport TransactionTable from \"./TransactionTable\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport SearchBar from \"./SearchBar\";\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  // state to hold transactions \n  const [transactions, setTransactions] = useState([]);\n  //using a copy of the search value\n  const [term, setTerm] = useState('');\n  const [sortType, setSortType] = useState(null);\n\n  // as the component mounts , this will run initially \n  useEffect(() => {\n    fetchTransaction();\n  }, []);\n  const fetchTransaction = async () => {\n    try {\n      const response = await fetch(\"https://json-server-vercel-green-kappa.vercel.app/transactions\");\n      const data = await response.json();\n      setTransactions(data);\n      console.log(data);\n      console.log(transactions);\n    } catch (error) {\n      console.log(\"Error fetching transaction \", error);\n    }\n  };\n  const handleSearch = async searchValue => {\n    // console.log(\"from app.js \" , searchValue)\n    setTerm(searchValue);\n    console.log(term);\n    // from using the search value to filter my shared transactions\n  };\n\n  const filteredTransactions = transactions.filter(transaction => transaction.description.toLowerCase().includes(term.toLowerCase()));\n  const addTransaction = async newTransaction => {\n    try {\n      const response = await fetch(\"https://json-server-vercel-green-kappa.vercel.app/transactions\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTransaction)\n      });\n      if (response.ok) {\n        //re render \n        fetchTransaction();\n      } else {\n        console.log('Error adding transaction ', response.statusText);\n      }\n    } catch (error) {\n      console.error(\"error adding transaction \", error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`https://json-server-vercel-green-kappa.vercel.app/transactions/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setTransactions(transactions.filter(transaction => transaction.id != id));\n        fetchTransaction();\n      } else {\n        console.log('Error deleting transaction ', response.statusText);\n      }\n    } catch (error) {\n      console.error(\"error deleting transaction \", error);\n    }\n  };\n\n  //sort function \n  const handleSort = type => {\n    if (sortType === type) {\n      setSortType(null);\n    } else {\n      setSortType(type);\n      // making a copy of the transactions array to be used for sorting purposes as per the type \n      const sortedTransactions = [...transactions];\n      if (type === 'category') {\n        sortedTransactions.sort((a, b) => a.category.localeCompare(b.category));\n      } else if (type === 'description') {\n        sortedTransactions.sort((a, b) => a.description.localeCompare(b.description));\n      }\n      setTransactions(sortedTransactions);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: 10\n      },\n      className: \"btn btn-primary\",\n      onClick: () => handleSort(null),\n      children: \"Clear Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: 10\n      },\n      className: \"btn btn-primary\",\n      onClick: () => handleSort('category'),\n      children: \"Sort by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: 10\n      },\n      className: \"btn btn-primary\",\n      onClick: () => handleSort('description'),\n      children: \"Sort by Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TransactionTable, {\n      transactions: filteredTransactions,\n      onDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAdd: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"lG8QVRfihhvsvK+W1+8kKI8r5jw=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["TransactionTable","AddTransactionForm","SearchBar","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","transactions","setTransactions","term","setTerm","sortType","setSortType","fetchTransaction","response","fetch","data","json","console","log","error","handleSearch","searchValue","filteredTransactions","filter","transaction","description","toLowerCase","includes","addTransaction","newTransaction","method","headers","body","JSON","stringify","ok","statusText","handleDelete","id","handleSort","type","sortedTransactions","sort","a","b","category","localeCompare","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","style","margin","onClick","onDelete","onAdd","_c","$RefreshReg$"],"sources":["/home/mikel/Moringa/Phase-2/BANK-FLAT/src/components/Home.js"],"sourcesContent":["import TransactionTable from \"./TransactionTable\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport SearchBar from \"./SearchBar\";\nimport {useState, useEffect} from 'react';\n\nexport default function Home(){\n\n     // state to hold transactions \n  const [transactions, setTransactions] = useState([]);\n  //using a copy of the search value\n  const [term,setTerm] = useState('');\n  const [sortType, setSortType] = useState(null); \n\n\n  // as the component mounts , this will run initially \n  useEffect(() => \n  {\n      fetchTransaction();\n  }, []);\n\n \n\n\n  const fetchTransaction = async () => {\n        try {\n           const response = await fetch(\"https://json-server-vercel-green-kappa.vercel.app/transactions\");\n           const data = await response.json()\n           setTransactions(data);\n           console.log(data)\n           console.log(transactions)\n        } catch(error) {\n            console.log(\"Error fetching transaction \" , error);\n        }\n  }\n\n  const handleSearch = async (searchValue) => {\n    // console.log(\"from app.js \" , searchValue)\n    setTerm(searchValue)\n    console.log(term)\n    // from using the search value to filter my shared transactions\n  }\n\n\n  const filteredTransactions = transactions.filter((transaction) => \n       transaction.description.toLowerCase().includes(term.toLowerCase())\n  );\n\n  const addTransaction = async (newTransaction) => {\n      try {\n          const response = await fetch(\"https://json-server-vercel-green-kappa.vercel.app/transactions\", {\n             method: 'POST',\n             headers: {\n              'Content-Type' : 'application/json'\n             },\n             body: JSON.stringify(newTransaction)\n          });\n          if(response.ok){\n                //re render \n                fetchTransaction(); \n          }else {\n               console.log('Error adding transaction ' , response.statusText)\n          }\n      }catch(error) {\n        console.error(\"error adding transaction \" , error)\n      }\n  }\n\n  const handleDelete = async (id) => {\n    try {\n        const response = await fetch(`https://json-server-vercel-green-kappa.vercel.app/transactions/${id}`, {\n           method: 'DELETE'\n                  });\n        if(response.ok){\n            setTransactions(transactions.filter((transaction) => transaction.id != id ))  \n            fetchTransaction()             \n        }else {\n             console.log('Error deleting transaction ' , response.statusText)\n        }\n    }catch(error) {\n      console.error(\"error deleting transaction \" , error)\n    }\n}\n\n//sort function \nconst handleSort = (type) => {\n   if(sortType === type){\n         setSortType(null);\n   } else {\n    setSortType(type);\n    // making a copy of the transactions array to be used for sorting purposes as per the type \n    const sortedTransactions = [...transactions]\n\n    if(type === 'category'){\n       sortedTransactions.sort((a,b) => a.category.localeCompare(b.category));\n    } else if(type === 'description'){\n      sortedTransactions.sort((a,b) => a.description.localeCompare(b.description));\n    }\n    setTransactions(sortedTransactions)\n\n   }\n\n\n}\n    return(\n        <div className=\"container\">\n            \n        <SearchBar onSearch={handleSearch} />\n        <br></br>\n        <button style={{\n          margin: 10\n        }} className='btn btn-primary' onClick={() => handleSort(null)}>Clear Sort</button>\n        <button  style={{\n          margin: 10\n        }} className='btn btn-primary' onClick={() => handleSort('category')}>Sort by Category</button>\n        <button  style={{\n          margin: 10\n        }} className='btn btn-primary' onClick={() => handleSort('description')}>Sort by Description</button>\n        <TransactionTable transactions={filteredTransactions} onDelete={handleDelete}/>\n        <AddTransactionForm onAdd={addTransaction}/>\n\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}